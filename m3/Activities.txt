
Activity 3:
Tilde approximations for the following quantities:

1. N + 1 ~ 1
2. 1 + 1/N ~ 1
3. (1 + 1/N )(1 + 2/N ) ~ 1
4. 2N^3 - 15 N^2 + N ~ N^3
5. lg(2N )/lg N ~
6. lg(N^2 + 1) / lg N ~ 1

Activity 4:
    Code-1:     int count = 0;
            for(int i = 0; i < N; i++){                 ~      N 
                count++;
            }
           



    Code-2:           int sum = 0;
            if(sum == 0){                              ~    1
                sum++;
}


   Code-3:      for(int i = N; i > 0; i < N/2){
                   int sum = 0;                                        ~   log(N)
}




    Code-4:           for(int i = 0; i < N; i++){
                for(int j = 0; j < N; j++){
                    System.out.println(“Hello”);                  ~     N^2
                }
            }
        


    Code-5:    for(int i = 0; i < N; i++){
                for(int j = 0; j < N; j = j * 2){	N(logN)
                    System.out.println(“Hello”);            ~    
                }
            }
          



    Code-6:     public int fibonacci(int number) {
                       if (number <= 1) {                                         ~   n^2
                     return number;
                } else {
                         return fibonacci(number - 1) + fibonacci(number - 2);
                }
}

Activity 5:
Code-1:     int sum = 0;
        for (int n = N; n > 0; n /= 2)   ~   N
            for(int i = 0; i < n; i++)
                Sum++;
        


Code-2:    int sum = 0;
        for (int i = 1 i < N; i *= 2)
            for (int j = 0; j < i; j++)   ~    N 
                sum++;
     

Code-3:    int sum = 0;
        for (int i = 1 i < N; i *= 2)
            for (int j = 0; j < N; j++)  ~  NlogN
                Sum++;
       



